extends ../layout

block content
  div(class="container mx-auto px-4 py-8")
    h1(class="text-3xl font-bold mb-8") Edit Founder

    form(id="edit-founder-form" class="space-y-6")
      // Basic Information
      div(class="bg-white p-6 rounded-lg shadow-md")
        h2(class="text-xl font-semibold mb-4") Basic Information
        
        div(class="grid grid-cols-1 md:grid-cols-2 gap-6")
          div(class="form-group")
            label(class="block text-sm font-medium text-gray-700 mb-2") Founder Name
            input(type="text" name="name" value=founder.name required class="w-full px-3 py-2 border rounded-md")
          
          div(class="form-group")
            label(class="block text-sm font-medium text-gray-700 mb-2") Title
            input(type="text" name="title" value=founder.title required class="w-full px-3 py-2 border rounded-md")

          div(class="form-group")
            label(class="block text-sm font-medium text-gray-700 mb-2") Location
            input(type="text" name="location" value=founder.location required class="w-full px-3 py-2 border rounded-md")

          // Current Image
          div(class="form-group")
            label(class="block text-sm font-medium text-gray-700 mb-2") Current Profile Image
            if founder.image
              div(class="mb-4")
                img(src=founder.image alt="Founder Image" class="w-32 h-32 object-cover rounded-full")
                button(type="button" onclick="deleteProfileImage()" class="mt-2 text-red-600 hover:text-red-800 text-sm") Remove Image
            input(type="file" name="image" accept="image/*" class="w-full")

      // Bio & Story
      div(class="bg-white p-6 rounded-lg shadow-md")
        h2(class="text-xl font-semibold mb-4") Bio & Story
        
        div(class="form-group mb-4")
          label(class="block text-sm font-medium text-gray-700 mb-2") Short Bio
          textarea(name="bio" rows="3" required class="w-full px-3 py-2 border rounded-md")= founder.bio
        
        div(class="form-group")
          label(class="block text-sm font-medium text-gray-700 mb-2") Founder Story
          textarea(name="story" rows="6" required class="w-full px-3 py-2 border rounded-md")= founder.story

      // Gallery Images
      div(class="bg-white p-6 rounded-lg shadow-md")
        h2(class="text-xl font-semibold mb-4") Gallery Images
        
        // Current Gallery
        if founder.gallery && founder.gallery.length > 0
          div(class="mb-6")
            h3(class="text-lg font-medium mb-4") Current Gallery
            div(class="grid grid-cols-2 md:grid-cols-4 gap-4")
              each photo in founder.gallery
                div(class="relative group")
                  img(src=photo.url alt="Gallery Image" class="w-full h-32 object-cover rounded-lg")
                  button(type="button" onclick=`deleteGalleryImage('${photo.url}')` class="absolute top-2 right-2 bg-red-500 text-white p-1 rounded-full opacity-0 group-hover:opacity-100 transition-opacity")
                    svg(class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24")
                      path(stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12")
        
        // New Gallery Images
        div
          h3(class="text-lg font-medium mb-4") Add New Gallery Images
          input(type="file" name="gallery" multiple accept="image/*" class="w-full")

      // Social Links
      div(class="bg-white p-6 rounded-lg shadow-md")
        h2(class="text-xl font-semibold mb-4") Social Links
        
        div(class="grid grid-cols-1 md:grid-cols-2 gap-6")
          div(class="form-group")
            label(class="block text-sm font-medium text-gray-700 mb-2") Instagram
            input(type="url" name="instagram" value=founder.socialLinks.instagram class="w-full px-3 py-2 border rounded-md")
          
          div(class="form-group")
            label(class="block text-sm font-medium text-gray-700 mb-2") LinkedIn
            input(type="url" name="linkedin" value=founder.socialLinks.linkedin class="w-full px-3 py-2 border rounded-md")
          
          div(class="form-group")
            label(class="block text-sm font-medium text-gray-700 mb-2") Website
            input(type="url" name="website" value=founder.socialLinks.website class="w-full px-3 py-2 border rounded-md")

      // Achievements
      div(class="bg-white p-6 rounded-lg shadow-md")
        h2(class="text-xl font-semibold mb-4") Achievements
        
        div(class="form-group")
          label(class="block text-sm font-medium text-gray-700 mb-2") Achievements (one per line)
          textarea(name="achievements" rows="4" class="w-full px-3 py-2 border rounded-md")= founder.achievements.join('\n')

      // Submit Buttons
      div(class="flex justify-end gap-4")
        button(type="button" onclick="window.location.href='/admin'" class="px-6 py-2 border border-gray-300 rounded-md hover:bg-gray-50 transition-colors") Cancel
        button(type="submit" class="bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700 transition-colors") Save Changes

  script.
    document.getElementById('edit-founder-form').addEventListener('submit', async (e) => {
      e.preventDefault();
      const formData = new FormData(e.target);
      
      try {
        const response = await fetch(`/api/founders/${founder.id}`, {
          method: 'PUT',
          body: formData
        });
        
        if (response.ok) {
          alert('Founder updated successfully!');
          window.location.href = '/admin';
        } else {
          alert('Error updating founder');
        }
      } catch (error) {
        console.error('Error:', error);
        alert('Error updating founder');
      }
    });

    async function deleteProfileImage() {
      if (confirm('Are you sure you want to delete the profile image?')) {
        try {
          const response = await fetch(`/api/founders/${founder.id}/image`, {
            method: 'DELETE'
          });
          
          if (response.ok) {
            location.reload();
          } else {
            alert('Error deleting profile image');
          }
        } catch (error) {
          console.error('Error:', error);
          alert('Error deleting profile image');
        }
      }
    }

    async function deleteGalleryImage(imageUrl) {
      if (confirm('Are you sure you want to delete this gallery image?')) {
        try {
          const response = await fetch(`/api/founders/${founder.id}/gallery`, {
            method: 'DELETE',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ imageUrl })
          });
          
          if (response.ok) {
            location.reload();
          } else {
            alert('Error deleting gallery image');
          }
        } catch (error) {
          console.error('Error:', error);
          alert('Error deleting gallery image');
        }
      }
    } 