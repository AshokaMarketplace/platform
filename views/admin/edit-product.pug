extends ../layout

block content
  div(class="container mx-auto px-4 py-8")
    h1(class="text-3xl font-bold mb-8") Edit Product

    form(id="edit-product-form" class="space-y-6")
      // Basic Information
      div(class="bg-white p-6 rounded-lg shadow-md")
        h2(class="text-xl font-semibold mb-4") Basic Information
        
        div(class="grid grid-cols-1 md:grid-cols-2 gap-6")
          div(class="form-group")
            label(class="block text-sm font-medium text-gray-700 mb-2") Product Name
            input(type="text" name="name" value=product.name required class="w-full px-3 py-2 border rounded-md")
          
          div(class="form-group")
            label(class="block text-sm font-medium text-gray-700 mb-2") Category
            select(name="category" required class="w-full px-3 py-2 border rounded-md")
              option(value="") Select Category
              option(value="Home & Living" selected=product.category === "Home & Living") Home & Living
              option(value="Fashion" selected=product.category === "Fashion") Fashion
              option(value="Art" selected=product.category === "Art") Art
              option(value="Food" selected=product.category === "Food") Food
              option(value="Other" selected=product.category === "Other") Other

          div(class="form-group")
            label(class="block text-sm font-medium text-gray-700 mb-2") Price (â‚¹)
            input(type="number" name="price" value=product.price required class="w-full px-3 py-2 border rounded-md")

          div(class="form-group")
            label(class="block text-sm font-medium text-gray-700 mb-2") Founder
            select(name="founderId" required class="w-full px-3 py-2 border rounded-md")
              option(value="") Select Founder
              each founder in founders
                option(value=founder.id selected=product.founderId === founder.id)= founder.name

      // Description
      div(class="bg-white p-6 rounded-lg shadow-md")
        h2(class="text-xl font-semibold mb-4") Description
        
        div(class="form-group")
          label(class="block text-sm font-medium text-gray-700 mb-2") Product Description
          textarea(name="description" rows="4" required class="w-full px-3 py-2 border rounded-md")= product.description

      // Images
      div(class="bg-white p-6 rounded-lg shadow-md")
        h2(class="text-xl font-semibold mb-4") Product Images
        
        // Current Images
        div(class="mb-6")
          h3(class="text-lg font-medium mb-4") Current Images
          div(class="grid grid-cols-2 md:grid-cols-4 gap-4")
            each image in product.images
              div(class="relative group")
                img(src=image alt="Product Image" class="w-full h-32 object-cover rounded-lg")
                button(type="button" onclick=`deleteImage('${image}')` class="absolute top-2 right-2 bg-red-500 text-white p-1 rounded-full opacity-0 group-hover:opacity-100 transition-opacity")
                  svg(class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24")
                    path(stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12")
        
        // New Images
        div
          h3(class="text-lg font-medium mb-4") Add New Images
          input(type="file" name="images" multiple accept="image/*" class="w-full")

      // Features & Details
      div(class="bg-white p-6 rounded-lg shadow-md")
        h2(class="text-xl font-semibold mb-4") Features & Details
        
        div(class="form-group")
          label(class="block text-sm font-medium text-gray-700 mb-2") Features (one per line)
          textarea(name="features" rows="4" class="w-full px-3 py-2 border rounded-md")= product.features.join('\n')
        
        div(class="grid grid-cols-1 md:grid-cols-2 gap-6 mt-4")
          div(class="form-group")
            label(class="block text-sm font-medium text-gray-700 mb-2") Materials (comma separated)
            input(type="text" name="materials" value=product.materials.join(', ') class="w-full px-3 py-2 border rounded-md")
          
          div(class="form-group")
            label(class="block text-sm font-medium text-gray-700 mb-2") Dimensions
            input(type="text" name="dimensions" value=product.dimensions class="w-full px-3 py-2 border rounded-md")

      // Submit Buttons
      div(class="flex justify-end gap-4")
        button(type="button" onclick="window.location.href='/admin'" class="px-6 py-2 border border-gray-300 rounded-md hover:bg-gray-50 transition-colors") Cancel
        button(type="submit" class="bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700 transition-colors") Save Changes

  script.
    document.getElementById('edit-product-form').addEventListener('submit', async (e) => {
      e.preventDefault();
      const formData = new FormData(e.target);
      
      try {
        const response = await fetch(`/api/products/${product.id}`, {
          method: 'PUT',
          body: formData
        });
        
        if (response.ok) {
          alert('Product updated successfully!');
          window.location.href = '/admin';
        } else {
          alert('Error updating product');
        }
      } catch (error) {
        console.error('Error:', error);
        alert('Error updating product');
      }
    });

    async function deleteImage(imageUrl) {
      if (confirm('Are you sure you want to delete this image?')) {
        try {
          const response = await fetch(`/api/products/${product.id}/images`, {
            method: 'DELETE',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ imageUrl })
          });
          
          if (response.ok) {
            location.reload();
          } else {
            alert('Error deleting image');
          }
        } catch (error) {
          console.error('Error:', error);
          alert('Error deleting image');
        }
      }
    } 